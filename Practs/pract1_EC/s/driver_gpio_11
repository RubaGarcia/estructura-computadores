.globl prog_gpio_11
.globl valor_gpio_11
.set GPBASE, 0x20200000
.set GPSEL1, 0x004
.set GPCLR0, 0x028
.set GPSET0, 0x01C
.data
.align 2
DIRLOGICA: .space 4

.text
prog_gpio_11:
SUB SP, SP, #4
STR R4, [SP,#0]
MOV R4, R0 @muevo el valor de entrada de la subrutina a otr reg
MOV R0, #13 @pongo los valores necesarios para la llamada al sistema
LDR R1, =GPBASE
MOV R2, #0x100
SWI 0x68 @llamada al sistema OS_MEMORY
LDR R0, =DIRLOGICA
STR R3, [R0, #0] @guardo la direccion logica
SWI 0x16 @llamada al sistema para entrar a modo supervisor
LDR R0, [R3, #GPSEL1] @accedo al registro de seleccion del dispositivo GPIO
MOV R1, #0x38 @cargo la mascara
BIC R0, R0, R1 @combino los bits con la mascara
CMP R4, #0 @comparo para comprobar si se quiere de entrada o de salida
BNE SI @si es de salida salto
MOV R1, #0
B PROGRAMA
SI:
MOV R1, #0x8
PROGRAMA:
ORR R0, R0, R1
STR R0, [R3, #GPSEL1] @guardo el contenido en el registro de antes
SWI 0x7C @llamada al sistema para salir del modo supervisor
LDR R4, [SP, #0]
ADD SP, SP, #4
MOV PC, LR



.text
prog_gpio:
stmdb sp!,{r4}
mov r0,#13
ldr r1,=GPBASE
mov r2,#0x100
swi 0x68
ldr r0,=DIRLOGICA
str r3, [r0,#0]
swi 0x16
ldr r0,[r3,#GPSEL1]
@0011 1000
mov r1,#0x38
bic r0,r0,r1
cmp r4,#0
bne si
mov r1,#0
b prog
si:
    mov r1,#0x8
prog:
    orr r0,r0,r1
    str r0,[r3,#GPSEL1]
    swi 0x7C
    ldmb sp!,{r4}



valor_gpio_11:
SUB SP, SP, #4
STR R4, [SP, #0]
MOV R4, R0 @muevo el valor que le entra a la subrutina a otro registro
LDR R0, =DIRLOGICA
LDR R3, [R0, #0] @cojo la direccion logica
SWI 0x16 @llamo al sistema para entrar en modo supervisor
CMP R4, #0 @comparo si quiero corriente o no
BNE SET @si quiero corriente salto
MOV R2, #GPCLR0 @muevo a un registro la constante del registro que necesito
B PROG
SET:
MOV R2, #GPSET0
PROG:
LDR R0, [R3, R2]
@accedo al registro que necesito dependiendo si quiero corriente o no
MOV R1, #0x800 @cargo la mascara
BIC R0, R0, R1 @combino el valor del registro con el que quiero
ORR R0,#0x800
STR R0, [R3, R2] @guardo el contenido en el registro del que lo he sacado
SWI 0x7C @llamo al sistema para salir del modo supervisor
LDR R4,[SP, #0]
ADD SP, SP, #4
MOV PC, LR



valor_gpio:
stmdb sp!,r4
mov r4,r0
ldr r0,=DIRLOGICA
ldr r3,[r0,#0]
swi 0x16
cmp r4,#0
bne set
mov r2,#GPCLR0
b prog
set:
    mov r2,#GPSET0
prog:
    ldr r0,[r3,r2]
    mov r1,#0x800
    bic r0,r0,r1
    orr r0,r1
    str r0,[r3,r2]
    swi 0x7c
ldmia sp!,r4